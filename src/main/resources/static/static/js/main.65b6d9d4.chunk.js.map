{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/SideDrawer/DrawerToggleButton.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","components/SideDrawer/SideDrawer.js","components/Backdrop/Backdrop.js","components/SitePages/products.js","components/SitePages/forSale.js","components/SitePages/advert.js","components/SitePages/photos.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","drawerToggleButton","click","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","SideDrawer_DrawerToggleButton","drawerClickHandler","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDeveTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","sideDrawer","drawerClasses","show","backdrop","clickme","Products","forSale","Advert","photos","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","sideDrawerOpen","drawerToggleClickHandler","prevState","backdropClickHandler","Backdrop_Backdrop","es","style","height","Layout_Header","SideDrawer_SideDrawer","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65b6d9d4.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project);\n        history.push(\"/dashboard\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type: GET_PROJECTS,\n        payload: res.data\n    });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`);\n        dispatch({\n            type: GET_PROJECT,\n            payload: res.data\n        });\n    } catch (error) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const deleteProject = id => async dispatch => {\n    if (\n        window.confirm(\n            \"Are you sure? This will delete the project and all the data related to it\"\n        )\n    ) {\n        await axios.delete(`/api/project/${id}`);\n        dispatch({\n            type: DELETE_PROJECT,\n            payload: id\n        });\n    }\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    };\n\n    render() {\n        const { project } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n\n                                <li\n                                    className=\"list-group-item delete\"\n                                    onClick={this.onDeleteClick.bind(\n                                        this,\n                                        project.projectIdentifier\n                                    )}\n                                >\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectItem.propTypes = {\n    deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n    null,\n    { deleteProject }\n)(ProjectItem);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                Create a Project\n            </Link>\n        </React.Fragment>\n    );\n};\n\nexport default CreateProjectButton;","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        this.props.getProjects();\n    }\n\n    render() {\n        const { projects } = this.props.project;\n\n        return (\n            <div className=\"projects\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <h1 className=\"display-4 text-center\">Projects</h1>\n                            <br />\n                            <CreateProjectButton />\n\n                            <br />\n                            <hr />\n                            {projects.map(project => (\n                                <ProjectItem key={project.id} project={project} />\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDashboard.propTypes = {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProjects }\n)(Dashboard);","import axios from \"axios\";\n\nconst setJWTToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const login = LoginRequest => async dispatch => {\n    try {\n        // post => Login Request\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\n        // extract token from res.data\n        const { token } = res.data;\n        // store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token);\n        // set our token in header ***\n        setJWTToken(token);\n        // decode token on React\n        const decoded = jwt_decode(token);\n        // dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n};","import React from 'react';\nimport './DrawerToggleButton.css';\n\n\nconst drawerToggleButton = props => (\n    <button  className=\"toggle-button\" onClick={props.click}>\n        <div className=\"toggle-button_line\" />\n        <div className=\"toggle-button_line\" />\n        <div className=\"toggle-button_line\" />\n    </button>\n);\n\nexport default drawerToggleButton;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\nimport DrawerToggleButton from \"../SideDrawer/DrawerToggleButton\";\n\nclass Header extends Component {\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n    render() {\n        const { validToken, user } = this.props.security;\n\n        const userIsAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            Dashboard\n                        </Link>\n                    </li>\n                </ul>\n\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/dashboard\">\n                            <i className=\"fas fa-user-circle mr-1\" />\n                            {user.fullName}\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            to=\"/logout\"\n                            onClick={this.logout.bind(this)}\n                        >\n                            Logout\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        const userIsNotAuthenticated = (\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                <ul className=\"navbar-nav ml-auto\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/register\">\n                            Sign Up\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">\n                            Login\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n\n        let headerLinks;\n\n        if (validToken && user) {\n            headerLinks = userIsAuthenticated;\n        } else {\n            headerLinks = userIsNotAuthenticated;\n        }\n\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-4\">\n                <DrawerToggleButton click={this.props.drawerClickHandler }/>\n                <div className=\"container\">\n                    <Link className=\"navbar-brand\" to=\"/\">\n                        QFlow Project Manager\n                    </Link>\n                    <button\n                        className=\"navbar-toggler\"\n                        type=\"button\"\n                        data-toggle=\"collapse\"\n                        data-target=\"#mobile-nav\"\n                    >\n                        <span className=\"navbar-toggler-icon\" />\n                    </button>\n                    {headerLinks}\n                </div>\n            </nav>\n        );\n    }\n}\n\nHeader.propTypes = {\n    logout: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    //life cycle hooks\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n        this.props.createProject(newProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div>\n                <div className=\"project\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-8 m-auto\">\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                                <hr />\n                                <form onSubmit={this.onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.projectName\n                                            })}\n                                            placeholder=\"Project Name\"\n                                            name=\"projectName\"\n                                            value={this.state.projectName}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectName && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectName}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"text\"\n                                            className={classnames(\"form-control form-control-lg\", {\n                                                \"is-invalid\": errors.projectIdentifier\n                                            })}\n                                            placeholder=\"Unique Project ID\"\n                                            name=\"projectIdentifier\"\n                                            value={this.state.projectIdentifier}\n                                            onChange={this.onChange}\n                                        />\n                                        {errors.projectIdentifier && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.projectIdentifier}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"form-group\">\n                    <textarea\n                        className={classnames(\"form-control form-control-lg\", {\n                            \"is-invalid\": errors.description\n                        })}\n                        placeholder=\"Project Description\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.onChange}\n                    />\n                                        {errors.description && (\n                                            <div className=\"invalid-feedback\">\n                                                {errors.description}\n                                            </div>\n                                        )}\n                                    </div>\n                                    <h6>Start Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"start_date\"\n                                            value={this.state.start_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n                                    <h6>Estimated End Date</h6>\n                                    <div className=\"form-group\">\n                                        <input\n                                            type=\"date\"\n                                            className=\"form-control form-control-lg\"\n                                            name=\"end_date\"\n                                            value={this.state.end_date}\n                                            onChange={this.onChange}\n                                        />\n                                    </div>\n\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block mt-4\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProject.propTypes = {\n    createProject: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { createProject }\n)(AddProject);","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n\n        default:\n            return state;\n    }\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n    projects: [],\n    project: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n\n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            };\n\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            };\n        default:\n            return state;\n    }\n}","import {\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            };\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            };\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_task => project_task.projectSequence !== action.payload\n                )\n            };\n\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n    validToken: false,\n    user: {}\n};\n\nconst booleanActionPayload = payload => {\n    if (payload) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                validToken: booleanActionPayload(action.payload),\n                user: action.payload\n            };\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n     errors: errorReducer,\n     project: projectReducer,\n     backlog: backlogReducer,\n     security: securityReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDeveTools =   window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDeveTools) {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDeveTools\n        )\n    );\n} else {\n    store = createStore(\n        rootReducer,\n        initalState,\n        compose(applyMiddleware(...middleware))\n    );\n}\n\nexport default store;","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n    //set state\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        });\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n\n        this.props.createProject(updateProject, this.props.history);\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"project\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\n                            <hr />\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.projectName\n                                        })}\n                                        placeholder=\"Project Name\"\n                                        name=\"projectName\"\n                                        value={this.state.projectName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.projectName && (\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control form-control-lg\"\n                                        placeholder=\"Unique Project ID\"\n                                        name=\"projectIdentifier\"\n                                        value={this.state.projectIdentifier}\n                                        onChange={this.onChange}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                          \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      onChange={this.onChange}\n                      value={this.state.description}\n                  />\n                                    {errors.description && (\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\n                                    )}\n                                </div>\n                                <h6>Start Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"start_date\"\n                                        value={this.state.start_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <h6>Estimated End Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"end_date\"\n                                        value={this.state.end_date}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired,\n    createProject: PropTypes.func.isRequired,\n    project: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProject, createProject }\n)(UpdateProject);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n    onDeleteClick(backlog_id, pt_id) {\n        this.props.deleteProjectTask(backlog_id, pt_id);\n    }\n    render() {\n        const { project_task } = this.props;\n        let priorityString;\n        let priorityClass;\n\n        if (project_task.priority === 1) {\n            priorityClass = \"bg-danger text-light\";\n            priorityString = \"HIGH\";\n        }\n\n        if (project_task.priority === 2) {\n            priorityClass = \"bg-warning text-light\";\n            priorityString = \"MEDIUM\";\n        }\n\n        if (project_task.priority === 3) {\n            priorityClass = \"bg-info text-light\";\n            priorityString = \"LOW\";\n        }\n\n        return (\n            <div className=\"card mb-1 bg-light\">\n                <div className={`card-header text-primary ${priorityClass}`}>\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\n                </div>\n                <div className=\"card-body bg-light\">\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\n                    <p className=\"card-text text-truncate \">\n                        {project_task.acceptanceCriteria}\n                    </p>\n                    <Link\n                        to={`/updateProjectTask/${project_task.projectIdentifier}/${\n                            project_task.projectSequence\n                            }`}\n                        className=\"btn btn-primary\"\n                    >\n                        View / Update\n                    </Link>\n\n                    <button\n                        className=\"btn btn-danger ml-4\"\n                        onClick={this.onDeleteClick.bind(\n                            this,\n                            project_task.projectIdentifier,\n                            project_task.projectSequence\n                        )}\n                    >\n                        Delete\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nProjectTask.propTypes = {\n    deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n    null,\n    { deleteProjectTask }\n)(ProjectTask);","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n    backlog_id,\n    project_task,\n    history\n) => async dispatch => {\n    try {\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const getProjectTask = (\n    backlog_id,\n    pt_id,\n    history\n) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        });\n    } catch (err) {\n        history.push(\"/dashboard\");\n    }\n};\n\nexport const updateProjectTask = (\n    backlog_id,\n    pt_id,\n    project_task,\n    history\n) => async dispatch => {\n    try {\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n    }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n    if (\n        window.confirm(\n            `You are deleting project task ${pt_id}, this action cannot be undone`\n        )\n    ) {\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: DELETE_PROJECT_TASK,\n            payload: pt_id\n        });\n    }\n};","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n    render() {\n        const { project_tasks_prop } = this.props;\n\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ));\n\n        let todoItems = [];\n        let inProgressItems = [];\n        let doneItems = [];\n\n        for (let i = 0; i < tasks.length; i++) {\n            if (tasks[i].props.project_task.status === \"TO_DO\") {\n                todoItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n                inProgressItems.push(tasks[i]);\n            }\n\n            if (tasks[i].props.project_task.status === \"DONE\") {\n                doneItems.push(tasks[i]);\n            }\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-secondary text-white\">\n                                <h3>TO DO</h3>\n                            </div>\n                        </div>\n                        {todoItems}\n                        {\n                            // insert tasks here\n                        }\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-primary text-white\">\n                                <h3>In Progress</h3>\n                            </div>\n                        </div>\n                        {inProgressItems}\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"card text-center mb-2\">\n                            <div className=\"card-header bg-success text-white\">\n                                <h3>Done</h3>\n                            </div>\n                        </div>\n                        {doneItems}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Backlog;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n    //constructor to handle errors\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        };\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const { project_tasks } = this.props.backlog;\n        const { errors } = this.state;\n\n        let BoardContent;\n\n        const boardAlgorithm = (errors, project_tasks) => {\n            if (project_tasks.length < 1) {\n                if (errors.projectNotFound) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\n                            No Project Tasks on this board\n                        </div>\n                    );\n                }\n            } else {\n                return <Backlog project_tasks_prop={project_tasks} />;\n            }\n        };\n\n        BoardContent = boardAlgorithm(errors, project_tasks);\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n                {BoardContent}\n            </div>\n        );\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getBacklog }\n)(ProjectBoard);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n    constructor(props) {\n        super(props);\n        const { id } = this.props.match.params;\n\n        this.state = {\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: 0,\n            dueDate: \"\",\n            projectIdentifier: id,\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    // on change\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    //on submit\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newTask = {\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate\n        };\n\n        this.props.addProjectTask(\n            this.state.projectIdentifier,\n            newTask,\n            this.props.history\n        );\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const { errors } = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.summary\n                                        })}\n                                        name=\"summary\"\n                                        placeholder=\"Project Task summary\"\n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                  />\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"dueDate\"\n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddProjectTask.propTypes = {\n    addProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { addProjectTask }\n)(AddProjectTask);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n    getProjectTask,\n    updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            create_At: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const { backlog_id, pt_id } = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n\n        const {\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        } = nextProps.project_task;\n\n        this.setState({\n            id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_At\n        });\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const UpdateProjectTask = {\n            id: this.state.id,\n            projectSequence: this.state.projectSequence,\n            summary: this.state.summary,\n            acceptanceCriteria: this.state.acceptanceCriteria,\n            status: this.state.status,\n            priority: this.state.priority,\n            dueDate: this.state.dueDate,\n            projectIdentifier: this.state.projectIdentifier,\n            create_At: this.state.create_At\n        };\n\n        // console.log(UpdateProjectTask);\n        this.props.updateProjectTask(\n            this.state.projectIdentifier,\n            this.state.projectSequence,\n            UpdateProjectTask,\n            this.props.history\n        );\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"add-PBI\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <Link\n                                to={`/projectBoard/${this.state.projectIdentifier}`}\n                                className=\"btn btn-light\"\n                            >\n                                Back to Project Board\n                            </Link>\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                            <p className=\"lead text-center\">\n                                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                                {this.state.projectSequence}{\" \"}\n                            </p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.summary\n                                        })}\n                                        name=\"summary\"\n                                        placeholder=\"Project Task summary\"\n                                        value={this.state.summary}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                  <textarea\n                      className=\"form-control form-control-lg\"\n                      placeholder=\"Acceptance Criteria\"\n                      name=\"acceptanceCriteria\"\n                      value={this.state.acceptanceCriteria}\n                      onChange={this.onChange}\n                  />\n                                </div>\n                                <h6>Due Date</h6>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"date\"\n                                        className=\"form-control form-control-lg\"\n                                        name=\"dueDate\"\n                                        value={this.state.dueDate}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"priority\"\n                                        value={this.state.priority}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value={0}>Select Priority</option>\n                                        <option value={1}>High</option>\n                                        <option value={2}>Medium</option>\n                                        <option value={3}>Low</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <select\n                                        className=\"form-control form-control-lg\"\n                                        name=\"status\"\n                                        value={this.state.status}\n                                        onChange={this.onChange}\n                                    >\n                                        <option value=\"\">Select Status</option>\n                                        <option value=\"TO_DO\">TO DO</option>\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                        <option value=\"DONE\">DONE</option>\n                                    </select>\n                                </div>\n\n                                <input\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-block mt-4\"\n                                />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project_task: state.backlog.project_task,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\n\nclass Landing extends Component {\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">QFlow Project Manager</h1>\n                                <p className=\"lead\">\n                                    See active projects or start yours\n                                </p>\n                                <hr/>\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\n                                    Sign Up\n                                </Link>\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\n                                    Login\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            username: \"\",\n            fullName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const newUser = {\n            username: this.state.username,\n            fullName: this.state.fullName,\n            password: this.state.password,\n            confirmPassword: this.state.confirmPassword\n        };\n\n        this.props.createNewUser(newUser, this.props.history);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"register\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\n                            <p className=\"lead text-center\">Create your Account</p>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.fullName\n                                        })}\n                                        placeholder=\"Full Name\"\n                                        name=\"fullName\"\n                                        value={this.state.fullName}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.fullName && (\n                                        <div className=\"invalid-feedback\">{errors.fullName}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address (Username)\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.confirmPassword\n                                        })}\n                                        placeholder=\"Confirm Password\"\n                                        name=\"confirmPassword\"\n                                        value={this.state.confirmPassword}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.confirmPassword && (\n                                        <div className=\"invalid-feedback\">\n                                            {errors.confirmPassword}\n                                        </div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    createNewUser: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n    security: state.security\n});\nexport default connect(\n    mapStateToProps,\n    { createNewUser }\n)(Register);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: \"\",\n            password: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.security.validToken) {\n            this.props.history.push(\"/dashboard\");\n        }\n\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const LoginRequest = {\n            username: this.state.username,\n            password: this.state.password\n        };\n\n        this.props.login(LoginRequest);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { errors } = this.state;\n        return (\n            <div className=\"login\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8 m-auto\">\n                            <h1 className=\"display-4 text-center\">Log In</h1>\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.username\n                                        })}\n                                        placeholder=\"Email Address\"\n                                        name=\"username\"\n                                        value={this.state.username}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.username && (\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"password\"\n                                        className={classnames(\"form-control form-control-lg\", {\n                                            \"is-invalid\": errors.password\n                                        })}\n                                        placeholder=\"Password\"\n                                        name=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.onChange}\n                                    />\n                                    {errors.password && (\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\n                                    )}\n                                </div>\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired,\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { login }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n    <Route\n        {...otherProps}\n        render={props =>\n            security.validToken === true ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to=\"/login\" />\n            )\n        }\n    />\n);\n\nSecuredRoute.propTypes = {\n    security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React from 'react';\nimport './SideDrawer.css';\nimport { Link } from 'react-router-dom';\n\n\nconst sideDrawer = props => {\n         let drawerClasses = 'side-drawer';\n         if(props.show) {\n             drawerClasses = 'side-drawer open';\n         }\n    return(\n        <nav className={drawerClasses}>\n        <ul>\n            <li><Link to=\"/products\"><i className=\"fa fa-flag-checkered pr-1\"> Products </i></Link></li>\n            <li><Link to=\"/forSale\"><i className=\"fa fa-flag-checkered pr-1\"> For Sale</i></Link></li>\n            <li><Link to=\"/advert\"><i className=\"fa fa-flag-checkered pr-1\"> Advertising </i></Link></li>\n            <li><Link to=\"/photos\"><i className=\"fa fa-flag-checkered pr-1\"> Photos </i></Link></li>\n        </ul>\n        </nav>\n    );\n};\n\n\nexport default sideDrawer;","import React from 'react';\nimport './Backdrop.css';\n\nconst backdrop = props  =>(\n    <div className=\"backdrop\" onClick={props.clickme}/>\n);\n\n\nexport default backdrop;","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Products extends Component {\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Products</h1>\n                                <hr/>\n                                <p className=\"lead\">\n                                    <h2>A List of all our products </h2>\n                                </p>\n                                <p className=\"lead\">\n                                    <h4>Page under Construction! </h4>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Products;","import React, { Component } from 'react';\n\nclass forSale extends Component {\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">For Sale</h1>\n                                <hr/>\n                                <p className=\"lead\">\n                                    <h2> Items for Sale</h2>\n                                </p>\n                                <p className=\"lead\">\n                                    <h4>Page under Construction! </h4>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default forSale;","import React, { Component } from 'react';\n\nclass Advert extends Component {\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Advertising</h1>\n                                <hr/>\n                                <p className=\"lead\">\n                                    <h2>Things you need to know</h2>\n                                </p>\n                                <p className=\"lead\">\n                                    <h4>Page under Construction! </h4>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Advert;","import React, { Component } from 'react';\n\nclass photos extends Component {\n    render() {\n        return (\n            <div className=\"landing\">\n                <div className=\"light-overlay landing-inner text-dark\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-md-12 text-center\">\n                                <h1 className=\"display-3 mb-4\">Photos</h1>\n                                <hr/>\n                                <p className=\"lead\">\n                                    <h2> See our Gallery</h2>\n                                </p>\n                                <p className=\"lead\">\n                                    <h4>Page under Construction! </h4>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default photos;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\nimport Toolbar from \"./components/Layout/Toolbar\";\nimport SideDrawer from \"./components/SideDrawer/SideDrawer\";\nimport Backdrop from './components/Backdrop/Backdrop';\nimport Products from \"./components/SitePages/products\";\nimport forSale from \"./components/SitePages/forSale\";\nimport Advert from \"./components/SitePages/advert\";\nimport photos from \"./components/SitePages/photos\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n    setJWTToken(jwtToken);\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n        type: SET_CURRENT_USER,\n        payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now() / 1000;\n    if (decoded_jwtToken.exp < currentTime) {\n        store.dispatch(logout());\n        window.location.href = \"/\";\n    }\n}\n\nclass App extends Component {\n\n    state = {\n        sideDrawerOpen: false\n    };\n\n    drawerToggleClickHandler = () => {\n      this.setState((prevState) => {\n          return {sideDrawerOpen: !prevState.sideDrawerOpen};\n      } );\n    };\n\n    backdropClickHandler = () => {\n      this.setState({sideDrawerOpen: false})\n    };\n\n    render() {\n\n        let backdrop;\n\n        if(this.state.sideDrawerOpen) {\n            backdrop =   <Backdrop clickme={this.backdropClickHandler}/>\n        }\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div style={{height:'100%'}}>\n                        <Header drawerClickHandler={this.drawerToggleClickHandler} />\n                        <SideDrawer show={this.state.sideDrawerOpen}/>\n                        {backdrop}\n                        {\n                            //Public Routes\n                        }\n\n                        <Route exact path=\"/\" component={Landing} />\n                        <Route exact path=\"/register\" component={Register} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/products\" component={Products} />\n                        <Route exact path=\"/forSale\" component={forSale} />\n                        <Route exact path=\"/advert\" component={Advert} />\n                        <Route exact path=\"/photos\" component={photos} />\n\n                        {\n                            //Private Routes\n                        }\n                        <Switch>\n                            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n                            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n                            <SecuredRoute\n                                exact\n                                path=\"/updateProject/:id\"\n                                component={UpdateProject}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/projectBoard/:id\"\n                                component={ProjectBoard}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/addProjectTask/:id\"\n                                component={AddProjectTask}\n                            />\n                            <SecuredRoute\n                                exact\n                                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                                component={UpdateProjectTask}\n                            />\n                        </Switch>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}